//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Terminals.Data.DB", "FK_BeforeConnectExecute_BeforeConnectExecute", "Favorites", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Terminals.Data.DB.Favorite), "BeforeConnectExecute", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Terminals.Data.DB.BeforeConnectExecute), true)]
[assembly: EdmRelationshipAttribute("Terminals.Data.DB", "FK_Security_CredentialBase", "CredentialBase", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Terminals.Data.DB.CredentialBase), "Security", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Terminals.Data.DB.SecurityOptions))]
[assembly: EdmRelationshipAttribute("Terminals.Data.DB", "FK_Security_Credentials", "Credentials", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Terminals.Data.DB.CredentialSet), "Security", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Terminals.Data.DB.SecurityOptions))]
[assembly: EdmRelationshipAttribute("Terminals.Data.DB", "FK_DisplayOptions_Favorites", "Favorites", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Terminals.Data.DB.Favorite), "DisplayOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Terminals.Data.DB.DisplayOptions), true)]
[assembly: EdmRelationshipAttribute("Terminals.Data.DB", "FK_Security_Favorites", "Favorites", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Terminals.Data.DB.Favorite), "Security", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Terminals.Data.DB.SecurityOptions), true)]
[assembly: EdmRelationshipAttribute("Terminals.Data.DB", "FK_Groups_Groups", "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Terminals.Data.DB.Group), "Groups1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Terminals.Data.DB.Group))]
[assembly: EdmRelationshipAttribute("Terminals.Data.DB", "FavoritesInGroup", "Favorites", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Terminals.Data.DB.Favorite), "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Terminals.Data.DB.Group))]

#endregion

namespace Terminals.Data.DB
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DataBase : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DataBase object using the connection string found in the 'DataBase' section of the application configuration file.
        /// </summary>
        public DataBase() : base("name=DataBase", "DataBase")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataBase object.
        /// </summary>
        public DataBase(string connectionString) : base(connectionString, "DataBase")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataBase object.
        /// </summary>
        public DataBase(EntityConnection connection) : base(connection, "DataBase")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        internal ObjectSet<BeforeConnectExecute> BeforeConnectExecute
        {
            get
            {
                if ((_BeforeConnectExecute == null))
                {
                    _BeforeConnectExecute = base.CreateObjectSet<BeforeConnectExecute>("BeforeConnectExecute");
                }
                return _BeforeConnectExecute;
            }
        }
        private ObjectSet<BeforeConnectExecute> _BeforeConnectExecute;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        internal ObjectSet<CredentialBase> CredentialBase
        {
            get
            {
                if ((_CredentialBase == null))
                {
                    _CredentialBase = base.CreateObjectSet<CredentialBase>("CredentialBase");
                }
                return _CredentialBase;
            }
        }
        private ObjectSet<CredentialBase> _CredentialBase;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        internal ObjectSet<DisplayOptions> DisplayOptions
        {
            get
            {
                if ((_DisplayOptions == null))
                {
                    _DisplayOptions = base.CreateObjectSet<DisplayOptions>("DisplayOptions");
                }
                return _DisplayOptions;
            }
        }
        private ObjectSet<DisplayOptions> _DisplayOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        internal ObjectSet<Favorite> Favorites
        {
            get
            {
                if ((_Favorites == null))
                {
                    _Favorites = base.CreateObjectSet<Favorite>("Favorites");
                }
                return _Favorites;
            }
        }
        private ObjectSet<Favorite> _Favorites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        internal ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        internal ObjectSet<SecurityOptions> Security
        {
            get
            {
                if ((_Security == null))
                {
                    _Security = base.CreateObjectSet<SecurityOptions>("Security");
                }
                return _Security;
            }
        }
        private ObjectSet<SecurityOptions> _Security;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BeforeConnectExecute EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        internal void AddToBeforeConnectExecute(BeforeConnectExecute beforeConnectExecute)
        {
            base.AddObject("BeforeConnectExecute", beforeConnectExecute);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CredentialBase EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        internal void AddToCredentialBase(CredentialBase credentialBase)
        {
            base.AddObject("CredentialBase", credentialBase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisplayOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        internal void AddToDisplayOptions(DisplayOptions displayOptions)
        {
            base.AddObject("DisplayOptions", displayOptions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Favorites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        internal void AddToFavorites(Favorite favorite)
        {
            base.AddObject("Favorites", favorite);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        internal void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Security EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        internal void AddToSecurity(SecurityOptions securityOptions)
        {
            base.AddObject("Security", securityOptions);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="favoriteId">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> GetFavoriteProtocolProperties(Nullable<global::System.Int32> favoriteId)
        {
            ObjectParameter favoriteIdParameter;
            if (favoriteId.HasValue)
            {
                favoriteIdParameter = new ObjectParameter("FavoriteId", favoriteId);
            }
            else
            {
                favoriteIdParameter = new ObjectParameter("FavoriteId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<global::System.String>("GetFavoriteProtocolProperties", favoriteIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="from">No Metadata Documentation available.</param>
        /// <param name="to">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> GetFavoritesHistoryByDate(Nullable<global::System.DateTime> from, Nullable<global::System.DateTime> to)
        {
            ObjectParameter fromParameter;
            if (from.HasValue)
            {
                fromParameter = new ObjectParameter("From", from);
            }
            else
            {
                fromParameter = new ObjectParameter("From", typeof(global::System.DateTime));
            }
    
            ObjectParameter toParameter;
            if (to.HasValue)
            {
                toParameter = new ObjectParameter("To", to);
            }
            else
            {
                toParameter = new ObjectParameter("To", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("GetFavoritesHistoryByDate", fromParameter, toParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="favoriteId">No Metadata Documentation available.</param>
        /// <param name="date">No Metadata Documentation available.</param>
        /// <param name="userSid">No Metadata Documentation available.</param>
        public int InsertHistory(Nullable<global::System.Int32> favoriteId, Nullable<global::System.DateTime> date, global::System.String userSid)
        {
            ObjectParameter favoriteIdParameter;
            if (favoriteId.HasValue)
            {
                favoriteIdParameter = new ObjectParameter("FavoriteId", favoriteId);
            }
            else
            {
                favoriteIdParameter = new ObjectParameter("FavoriteId", typeof(global::System.Int32));
            }
    
            ObjectParameter dateParameter;
            if (date.HasValue)
            {
                dateParameter = new ObjectParameter("Date", date);
            }
            else
            {
                dateParameter = new ObjectParameter("Date", typeof(global::System.DateTime));
            }
    
            ObjectParameter userSidParameter;
            if (userSid != null)
            {
                userSidParameter = new ObjectParameter("UserSid", userSid);
            }
            else
            {
                userSidParameter = new ObjectParameter("UserSid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("InsertHistory", favoriteIdParameter, dateParameter, userSidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="favoriteId">No Metadata Documentation available.</param>
        /// <param name="protocolProperties">No Metadata Documentation available.</param>
        public int UpdateFavoriteProtocolProperties(Nullable<global::System.Int32> favoriteId, global::System.String protocolProperties)
        {
            ObjectParameter favoriteIdParameter;
            if (favoriteId.HasValue)
            {
                favoriteIdParameter = new ObjectParameter("FavoriteId", favoriteId);
            }
            else
            {
                favoriteIdParameter = new ObjectParameter("FavoriteId", typeof(global::System.Int32));
            }
    
            ObjectParameter protocolPropertiesParameter;
            if (protocolProperties != null)
            {
                protocolPropertiesParameter = new ObjectParameter("ProtocolProperties", protocolProperties);
            }
            else
            {
                protocolPropertiesParameter = new ObjectParameter("ProtocolProperties", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("UpdateFavoriteProtocolProperties", favoriteIdParameter, protocolPropertiesParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Terminals.Data.DB", Name="BeforeConnectExecute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class BeforeConnectExecute : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BeforeConnectExecute object.
        /// </summary>
        /// <param name="favoriteId">Initial value of the FavoriteId property.</param>
        /// <param name="execute">Initial value of the Execute property.</param>
        /// <param name="waitForExit">Initial value of the WaitForExit property.</param>
        public static BeforeConnectExecute CreateBeforeConnectExecute(global::System.Int32 favoriteId, global::System.Boolean execute, global::System.Boolean waitForExit)
        {
            BeforeConnectExecute beforeConnectExecute = new BeforeConnectExecute();
            beforeConnectExecute.FavoriteId = favoriteId;
            beforeConnectExecute.Execute = execute;
            beforeConnectExecute.WaitForExit = waitForExit;
            return beforeConnectExecute;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FavoriteId
        {
            get
            {
                return _FavoriteId;
            }
            set
            {
                if (_FavoriteId != value)
                {
                    OnFavoriteIdChanging(value);
                    ReportPropertyChanging("FavoriteId");
                    _FavoriteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FavoriteId");
                    OnFavoriteIdChanged();
                }
            }
        }
        private global::System.Int32 _FavoriteId;
        partial void OnFavoriteIdChanging(global::System.Int32 value);
        partial void OnFavoriteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Execute
        {
            get
            {
                return _Execute;
            }
            set
            {
                OnExecuteChanging(value);
                ReportPropertyChanging("Execute");
                _Execute = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Execute");
                OnExecuteChanged();
            }
        }
        private global::System.Boolean _Execute;
        partial void OnExecuteChanging(global::System.Boolean value);
        partial void OnExecuteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Command
        {
            get
            {
                return _Command;
            }
            set
            {
                OnCommandChanging(value);
                ReportPropertyChanging("Command");
                _Command = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Command");
                OnCommandChanged();
            }
        }
        private global::System.String _Command;
        partial void OnCommandChanging(global::System.String value);
        partial void OnCommandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CommandArguments
        {
            get
            {
                return _CommandArguments;
            }
            set
            {
                OnCommandArgumentsChanging(value);
                ReportPropertyChanging("CommandArguments");
                _CommandArguments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CommandArguments");
                OnCommandArgumentsChanged();
            }
        }
        private global::System.String _CommandArguments;
        partial void OnCommandArgumentsChanging(global::System.String value);
        partial void OnCommandArgumentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InitialDirectory
        {
            get
            {
                return _InitialDirectory;
            }
            set
            {
                OnInitialDirectoryChanging(value);
                ReportPropertyChanging("InitialDirectory");
                _InitialDirectory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InitialDirectory");
                OnInitialDirectoryChanged();
            }
        }
        private global::System.String _InitialDirectory;
        partial void OnInitialDirectoryChanging(global::System.String value);
        partial void OnInitialDirectoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean WaitForExit
        {
            get
            {
                return _WaitForExit;
            }
            set
            {
                OnWaitForExitChanging(value);
                ReportPropertyChanging("WaitForExit");
                _WaitForExit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WaitForExit");
                OnWaitForExitChanged();
            }
        }
        private global::System.Boolean _WaitForExit;
        partial void OnWaitForExitChanging(global::System.Boolean value);
        partial void OnWaitForExitChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Terminals.Data.DB", "FK_BeforeConnectExecute_BeforeConnectExecute", "Favorites")]
        public Favorite Favorite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Favorite>("Terminals.Data.DB.FK_BeforeConnectExecute_BeforeConnectExecute", "Favorites").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Favorite>("Terminals.Data.DB.FK_BeforeConnectExecute_BeforeConnectExecute", "Favorites").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Favorite> FavoriteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Favorite>("Terminals.Data.DB.FK_BeforeConnectExecute_BeforeConnectExecute", "Favorites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Favorite>("Terminals.Data.DB.FK_BeforeConnectExecute_BeforeConnectExecute", "Favorites", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Terminals.Data.DB", Name="CredentialBase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(CredentialSet))]
    internal partial class CredentialBase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CredentialBase object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static CredentialBase CreateCredentialBase(global::System.Int32 id)
        {
            CredentialBase credentialBase = new CredentialBase();
            credentialBase.Id = id;
            return credentialBase;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Domain
        {
            get
            {
                return _Domain;
            }
            set
            {
                OnDomainChanging(value);
                ReportPropertyChanging("Domain");
                _Domain = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Domain");
                OnDomainChanged();
            }
        }
        private global::System.String _Domain;
        partial void OnDomainChanging(global::System.String value);
        partial void OnDomainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EncryptedPassword
        {
            get
            {
                return _EncryptedPassword;
            }
            set
            {
                OnEncryptedPasswordChanging(value);
                ReportPropertyChanging("EncryptedPassword");
                _EncryptedPassword = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EncryptedPassword");
                OnEncryptedPasswordChanged();
            }
        }
        private global::System.String _EncryptedPassword;
        partial void OnEncryptedPasswordChanging(global::System.String value);
        partial void OnEncryptedPasswordChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Terminals.Data.DB", "FK_Security_CredentialBase", "Security")]
        public SecurityOptions Security
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityOptions>("Terminals.Data.DB.FK_Security_CredentialBase", "Security").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityOptions>("Terminals.Data.DB.FK_Security_CredentialBase", "Security").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityOptions> SecurityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityOptions>("Terminals.Data.DB.FK_Security_CredentialBase", "Security");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityOptions>("Terminals.Data.DB.FK_Security_CredentialBase", "Security", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Terminals.Data.DB", Name="CredentialSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class CredentialSet : CredentialBase
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CredentialSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static CredentialSet CreateCredentialSet(global::System.Int32 id, global::System.String name)
        {
            CredentialSet credentialSet = new CredentialSet();
            credentialSet.Id = id;
            credentialSet.Name = name;
            return credentialSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Terminals.Data.DB", Name="DisplayOptions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class DisplayOptions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisplayOptions object.
        /// </summary>
        /// <param name="favoriteId">Initial value of the FavoriteId property.</param>
        public static DisplayOptions CreateDisplayOptions(global::System.Int32 favoriteId)
        {
            DisplayOptions displayOptions = new DisplayOptions();
            displayOptions.FavoriteId = favoriteId;
            return displayOptions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FavoriteId
        {
            get
            {
                return _FavoriteId;
            }
            set
            {
                if (_FavoriteId != value)
                {
                    OnFavoriteIdChanging(value);
                    ReportPropertyChanging("FavoriteId");
                    _FavoriteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FavoriteId");
                    OnFavoriteIdChanged();
                }
            }
        }
        private global::System.Int32 _FavoriteId;
        partial void OnFavoriteIdChanging(global::System.Int32 value);
        partial void OnFavoriteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private Nullable<global::System.Int32> _Height;
        partial void OnHeightChanging(Nullable<global::System.Int32> value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Int32> _Width;
        partial void OnWidthChanging(Nullable<global::System.Int32> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private Nullable<global::System.Byte> _Size;
        partial void OnSizeChanging(Nullable<global::System.Byte> value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Colors
        {
            get
            {
                return _Colors;
            }
            set
            {
                OnColorsChanging(value);
                ReportPropertyChanging("Colors");
                _Colors = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Colors");
                OnColorsChanged();
            }
        }
        private Nullable<global::System.Byte> _Colors;
        partial void OnColorsChanging(Nullable<global::System.Byte> value);
        partial void OnColorsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Terminals.Data.DB", "FK_DisplayOptions_Favorites", "Favorites")]
        public Favorite Favorite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Favorite>("Terminals.Data.DB.FK_DisplayOptions_Favorites", "Favorites").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Favorite>("Terminals.Data.DB.FK_DisplayOptions_Favorites", "Favorites").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Favorite> FavoriteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Favorite>("Terminals.Data.DB.FK_DisplayOptions_Favorites", "Favorites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Favorite>("Terminals.Data.DB.FK_DisplayOptions_Favorites", "Favorites", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Terminals.Data.DB", Name="Favorite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class Favorite : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Favorite object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="protocol">Initial value of the Protocol property.</param>
        /// <param name="port">Initial value of the Port property.</param>
        /// <param name="serverName">Initial value of the ServerName property.</param>
        /// <param name="newWindow">Initial value of the NewWindow property.</param>
        public static Favorite CreateFavorite(global::System.Int32 id, global::System.String name, global::System.String protocol, global::System.Int32 port, global::System.String serverName, global::System.Boolean newWindow)
        {
            Favorite favorite = new Favorite();
            favorite.Id = id;
            favorite.Name = name;
            favorite.Protocol = protocol;
            favorite.Port = port;
            favorite.ServerName = serverName;
            favorite.NewWindow = newWindow;
            return favorite;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Protocol
        {
            get
            {
                return _Protocol;
            }
            set
            {
                OnProtocolChanging(value);
                ReportPropertyChanging("Protocol");
                _Protocol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Protocol");
                OnProtocolChanged();
            }
        }
        private global::System.String _Protocol;
        partial void OnProtocolChanging(global::System.String value);
        partial void OnProtocolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Port
        {
            get
            {
                return _Port;
            }
            set
            {
                OnPortChanging(value);
                ReportPropertyChanging("Port");
                _Port = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Port");
                OnPortChanged();
            }
        }
        private global::System.Int32 _Port;
        partial void OnPortChanging(global::System.Int32 value);
        partial void OnPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServerName
        {
            get
            {
                return _ServerName;
            }
            set
            {
                OnServerNameChanging(value);
                ReportPropertyChanging("ServerName");
                _ServerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServerName");
                OnServerNameChanged();
            }
        }
        private global::System.String _ServerName;
        partial void OnServerNameChanging(global::System.String value);
        partial void OnServerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NewWindow
        {
            get
            {
                return _NewWindow;
            }
            set
            {
                OnNewWindowChanging(value);
                ReportPropertyChanging("NewWindow");
                _NewWindow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewWindow");
                OnNewWindowChanged();
            }
        }
        private global::System.Boolean _NewWindow;
        partial void OnNewWindowChanging(global::System.Boolean value);
        partial void OnNewWindowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DesktopShare
        {
            get
            {
                return _DesktopShare;
            }
            set
            {
                OnDesktopShareChanging(value);
                ReportPropertyChanging("DesktopShare");
                _DesktopShare = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DesktopShare");
                OnDesktopShareChanged();
            }
        }
        private global::System.String _DesktopShare;
        partial void OnDesktopShareChanging(global::System.String value);
        partial void OnDesktopShareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Terminals.Data.DB", "FK_BeforeConnectExecute_BeforeConnectExecute", "BeforeConnectExecute")]
        public BeforeConnectExecute ExecuteBeforeConnect
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BeforeConnectExecute>("Terminals.Data.DB.FK_BeforeConnectExecute_BeforeConnectExecute", "BeforeConnectExecute").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BeforeConnectExecute>("Terminals.Data.DB.FK_BeforeConnectExecute_BeforeConnectExecute", "BeforeConnectExecute").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BeforeConnectExecute> ExecuteBeforeConnectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BeforeConnectExecute>("Terminals.Data.DB.FK_BeforeConnectExecute_BeforeConnectExecute", "BeforeConnectExecute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BeforeConnectExecute>("Terminals.Data.DB.FK_BeforeConnectExecute_BeforeConnectExecute", "BeforeConnectExecute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Terminals.Data.DB", "FK_DisplayOptions_Favorites", "DisplayOptions")]
        public DisplayOptions Display
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayOptions>("Terminals.Data.DB.FK_DisplayOptions_Favorites", "DisplayOptions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayOptions>("Terminals.Data.DB.FK_DisplayOptions_Favorites", "DisplayOptions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisplayOptions> DisplayReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayOptions>("Terminals.Data.DB.FK_DisplayOptions_Favorites", "DisplayOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisplayOptions>("Terminals.Data.DB.FK_DisplayOptions_Favorites", "DisplayOptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Terminals.Data.DB", "FK_Security_Favorites", "Security")]
        public SecurityOptions Security
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityOptions>("Terminals.Data.DB.FK_Security_Favorites", "Security").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityOptions>("Terminals.Data.DB.FK_Security_Favorites", "Security").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityOptions> SecurityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityOptions>("Terminals.Data.DB.FK_Security_Favorites", "Security");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityOptions>("Terminals.Data.DB.FK_Security_Favorites", "Security", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Terminals.Data.DB", "FavoritesInGroup", "Groups")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("Terminals.Data.DB.FavoritesInGroup", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("Terminals.Data.DB.FavoritesInGroup", "Groups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Terminals.Data.DB", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Group CreateGroup(global::System.Int32 id, global::System.String name)
        {
            Group group = new Group();
            group.Id = id;
            group.Name = name;
            return group;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Terminals.Data.DB", "FK_Groups_Groups", "Groups1")]
        public EntityCollection<Group> ChildGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("Terminals.Data.DB.FK_Groups_Groups", "Groups1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("Terminals.Data.DB.FK_Groups_Groups", "Groups1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Terminals.Data.DB", "FK_Groups_Groups", "Groups")]
        public Group ParentGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Terminals.Data.DB.FK_Groups_Groups", "Groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Terminals.Data.DB.FK_Groups_Groups", "Groups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> ParentGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Terminals.Data.DB.FK_Groups_Groups", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("Terminals.Data.DB.FK_Groups_Groups", "Groups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Terminals.Data.DB", "FavoritesInGroup", "Favorites")]
        public EntityCollection<Favorite> Favorites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Favorite>("Terminals.Data.DB.FavoritesInGroup", "Favorites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Favorite>("Terminals.Data.DB.FavoritesInGroup", "Favorites", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Terminals.Data.DB", Name="SecurityOptions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class SecurityOptions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurityOptions object.
        /// </summary>
        /// <param name="favoriteId">Initial value of the FavoriteId property.</param>
        public static SecurityOptions CreateSecurityOptions(global::System.Int32 favoriteId)
        {
            SecurityOptions securityOptions = new SecurityOptions();
            securityOptions.FavoriteId = favoriteId;
            return securityOptions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FavoriteId
        {
            get
            {
                return _FavoriteId;
            }
            set
            {
                if (_FavoriteId != value)
                {
                    OnFavoriteIdChanging(value);
                    ReportPropertyChanging("FavoriteId");
                    _FavoriteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FavoriteId");
                    OnFavoriteIdChanged();
                }
            }
        }
        private global::System.Int32 _FavoriteId;
        partial void OnFavoriteIdChanging(global::System.Int32 value);
        partial void OnFavoriteIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Terminals.Data.DB", "FK_Security_CredentialBase", "CredentialBase")]
        public CredentialBase CredentialBase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CredentialBase>("Terminals.Data.DB.FK_Security_CredentialBase", "CredentialBase").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CredentialBase>("Terminals.Data.DB.FK_Security_CredentialBase", "CredentialBase").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CredentialBase> CredentialBaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CredentialBase>("Terminals.Data.DB.FK_Security_CredentialBase", "CredentialBase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CredentialBase>("Terminals.Data.DB.FK_Security_CredentialBase", "CredentialBase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Terminals.Data.DB", "FK_Security_Credentials", "Credentials")]
        public CredentialSet CredentialSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CredentialSet>("Terminals.Data.DB.FK_Security_Credentials", "Credentials").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CredentialSet>("Terminals.Data.DB.FK_Security_Credentials", "Credentials").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CredentialSet> CredentialSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CredentialSet>("Terminals.Data.DB.FK_Security_Credentials", "Credentials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CredentialSet>("Terminals.Data.DB.FK_Security_Credentials", "Credentials", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Terminals.Data.DB", "FK_Security_Favorites", "Favorites")]
        public Favorite Favorite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Favorite>("Terminals.Data.DB.FK_Security_Favorites", "Favorites").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Favorite>("Terminals.Data.DB.FK_Security_Favorites", "Favorites").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Favorite> FavoriteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Favorite>("Terminals.Data.DB.FK_Security_Favorites", "Favorites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Favorite>("Terminals.Data.DB.FK_Security_Favorites", "Favorites", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
